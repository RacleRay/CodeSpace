#Uses python3import sysfrom collections import dequedef acyclic(adj):    in_degree = [0] * len(adj)    for i in range(len(adj)):        for vertice in adj[i]:            in_degree[vertice] += 1  # 计算入度，为了找到source点    queue = deque()    for i in range(len(adj)):        if in_degree[i] == 0:            queue.append(i)  # source节点    # 当存在环，那么topological遍历的计数不等于实际vertice数    count = 0    while queue:        bfs_pop = queue.popleft()        for v_next in adj[bfs_pop]:            in_degree[v_next] -= 1  # 该方法保证了一定会退出循环            if in_degree[v_next] == 0:                queue.append(v_next)  # bfs append        count += 1    return 0 if count == len(adj) else 1if __name__ == '__main__':    # 4 4 1 2 4 1 2 3 3 1    # 5 7 1 2 2 3 1 3 3 4 1 4 2 5 3 5    # 100 100 27 96 23 51 42 10 40 22 30 41 80 40 13 70 21 94 88 35 38 86 53 83 71 84 64 26 4 46 76 43 24 76 26 83 18 75 42 98 36 39 47 63 33 96 89 54 47 80 95 8 34 41 91 45 78 1 12 74 2 37 98 81 30 32 93 30 45 71 38 44 85 18 89 10 71 35 73 52 28 42 98 20 22 69 56 79 78 63 53 58 77 13 6 11 56 36 4 11 92 63 32 78 71 24 16 79 66 89 72 6 20 15 2 91 100 75 93 7 42 100 18 88 49 75 33 78 81 1 42 95 73 64 50 66 33 68 14 38 80 89 8 16 87 18 20 80 81 38 14 35 91 20 36 5 16 8 61 11 72 91 26 57 60 83 80 11 58 1 71 36 41 30 57 46 47 82 46 74 28 9 76 70 69 58 39 73 89 55 93 54 17 92 54 44 21 69 87 58 96 34    # 200 100 94 123 121 81 131 11 198 173 135 60 10 118 34 8 59 178 32 142 135 24 95 197 34 74 98 86 28 97 49 28 8 38 119 198 75 171 120 198 163 19 183 59 188 121 71 41 72 2 182 78 165 155 129 103 64 195 5 164 156 23 49 181 132 85 66 120 76 151 176 22 82 67 178 196 90 8 184 24 199 63 25 9 102 176 44 161 195 192 187 135 136 40 118 87 74 10 191 108 91 100 57 1 39 130 112 133 34 168 53 164 182 7 108 48 50 20 12 174 117 28 99 33 153 172 17 21 154 5 27 136 124 109 110 40 112 166 137 84 158 84 80 99 160 103 105 42 194 76 107 44 107 115 117 147 33 88 84 130 178 198 63 195 37 136 109 129 1 85 141 152 199 12 13 189 121 97 60 64 29 77 193 157 80 43 68 9 155 78 142 190 40 182 69 146 142 173 56 183 63 138    input = sys.stdin.read()    data = list(map(int, input.split()))    n, m = data[0:2]    data = data[2:]    edges = list(zip(data[0:(2 * m):2], data[1:(2 * m):2]))    adj = [[] for _ in range(n)]    for (a, b) in edges:        adj[a - 1].append(b - 1)    print(acyclic(adj))#